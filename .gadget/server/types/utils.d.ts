declare const asyncTag: string, funcTag: string, genTag: string, mapTag: string, nullTag: string, proxyTag: string, setTag: string, undefinedTag: string;
declare const symToStringTag: any;
declare const nativeObjectToString: (this: any) => string;
declare const hasOwnProperty: (this: any, key: string) => boolean;
declare function baseGetTag(value: any);
declare function getRawTag(value: any);
export declare function assert<T>(value: T | false | undefined | null, message?: string): T;
export declare function isObject(value: any): value is object;
export declare function isObjectLike(value: any): value is object;
export declare function isFunction(value: any): value is Function;
export declare function isArrayLike(value: any): boolean;
export declare function isEmpty(value: null | undefined | any[] | object): boolean;
export declare function isString(value: any): value is string;
export declare function keyBy<T>(array: T[], iteratee: keyof T | ((value: T) => string)): Record<string, T>;
export declare function pickBy<T extends object>(object: T, predicate: (value: T[keyof T], key: keyof T) => boolean): Partial<T>;
export declare function invert(object: any): Record<string, any>;
declare function mapValue(object: any, iteratee: any): Record<string, any>;
export default mapValue;
export declare const defaults: (...args: any[]) => Record<string, any>;
export declare const isProductionEnvironment: () => boolean;
