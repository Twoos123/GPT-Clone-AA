{
  "version": 3,
  "sources": ["../src/nodemailer-transports.ts"],
  "sourcesContent": ["type ms = number;\ntype s = number;\n\ntype AuthenticationType = AuthenticationTypeCustom | AuthenticationTypeLogin | AuthenticationTypeOAuth2;\n\ninterface Credentials {\n  /** the username */\n  user: string;\n  /** then password */\n  pass: string;\n}\n\ninterface OAuth2 {\n  /** User e-mail address */\n  user?: string | undefined;\n  /** Client ID value */\n  clientId?: string | undefined;\n  /** Client secret value */\n  clientSecret?: string | undefined;\n  /** Refresh token for an user */\n  refreshToken?: string | undefined;\n  /** Endpoint for token generation, defaults to 'https://accounts.google.com/o/oauth2/token' */\n  accessUrl?: string | undefined;\n  /** An existing valid accessToken */\n  accessToken?: string | undefined;\n  /** Private key for JSW */\n  privateKey?: string | { key: string; passphrase: string } | undefined;\n  /** Optional Access Token expire time in ms */\n  expires?: ms | undefined;\n  /** Optional TTL for Access Token in seconds */\n  timeout?: s | undefined;\n  /** Function to run when a new access token is required */\n  provisionCallback?(user: string, renew: boolean, callback: (err: Error | null, accessToken: string, expires: number) => void): void;\n  serviceClient?: string | undefined;\n}\n\ninterface AuthenticationTypeCustom extends Credentials {\n  /** indicates the authetication type, defaults to \u2018login\u2019, other option is \u2018oauth2\u2019 or \u2018custom\u2019 */\n  type: \"custom\" | \"Custom\" | \"CUSTOM\";\n  method: string;\n}\n\ninterface AuthenticationTypeLogin extends Credentials {\n  /** indicates the authetication type, defaults to \u2018login\u2019, other option is \u2018oauth2\u2019 or \u2018custom\u2019 */\n  type?: \"login\" | \"Login\" | \"LOGIN\" | undefined;\n}\n\ninterface AuthenticationTypeOAuth2 extends OAuth2 {\n  /** indicates the authetication type, defaults to \u2018login\u2019, other option is \u2018oauth2\u2019 or \u2018custom\u2019 */\n  type?: \"oauth2\" | \"OAuth2\" | \"OAUTH2\" | undefined;\n}\n\nexport interface SMTPTransportConfig {\n  /** the hostname or IP address to connect to (defaults to \u2018localhost\u2019) */\n  host?: string | undefined;\n  /** the port to connect to (defaults to 25 or 465) */\n  port?: number | undefined;\n  /** defines authentication data */\n  auth?: AuthenticationType | undefined;\n  /** defines if the connection should use SSL (if true) or not (if false) */\n  secure?: boolean | undefined;\n  name?: string | undefined;\n  /** the local interface to bind to for network connections */\n  localAddress?: string | undefined;\n  /** how many milliseconds to wait for the connection to establish */\n  connectionTimeout?: ms | undefined;\n  /** how many milliseconds to wait for the greeting after connection is established */\n  greetingTimeout?: ms | undefined;\n  /** how many milliseconds of inactivity to allow */\n  socketTimeout?: ms | undefined;\n  /** how many milliseconds to wait for the DNS requests to be resolved */\n  dnsTimeout?: ms | undefined;\n  /** if set to true, then logs SMTP traffic without message content */\n  transactionLog?: boolean | undefined;\n  /** if set to true, then logs SMTP traffic and message content, otherwise logs only transaction events */\n  debug?: boolean | undefined;\n  /** defines preferred authentication method, e.g. \u2018PLAIN\u2019 */\n  authMethod?: string | undefined;\n  /** if true, uses LMTP instead of SMTP protocol */\n  lmtp?: boolean | undefined;\n}\n\nexport interface SendmailTransportConfig {\n  sendmail: true;\n  /** path to the sendmail command (defaults to \u2018sendmail\u2019) */\n  path?: string | undefined;\n  /** either \u2018windows\u2019 or \u2018unix\u2019 (default). Forces all newlines in the output to either use Windows syntax <CR><LF> or Unix syntax <LF> */\n  newline?: string | undefined;\n  /** an optional array of command line options to pass to the sendmail command (ie. [\"-f\", \"foo@blurdybloop.com\"]). This overrides all default arguments except for \u2019-i\u2019 and recipient list so you need to make sure you have all required arguments set (ie. the \u2018-f\u2019 flag). */\n  args?: string[] | undefined;\n}\n\nexport interface StreamTransportConfig {\n  streamTransport: true;\n  /** if true, then returns the message as a Buffer object instead of a stream */\n  buffer?: boolean | undefined;\n  /** either \u2018windows\u2019 or \u2018unix\u2019 (default). Forces all newlines in the output to either use Windows syntax <CR><LF> or Unix syntax <LF> */\n  newline?: string | undefined;\n}\n\nexport interface JSONTransportConfig {\n  jsonTransport: true;\n  skipEncoding?: boolean | undefined;\n}\n\nexport interface SESTransportConfig {\n  /** is an option that expects an instantiated aws.SES object */\n  SES: any; // aws-sdk.SES object\n  /** How many messages per second is allowed to be delivered to SES */\n  maxConnections?: number | undefined;\n  /** How many parallel connections to allow towards SES */\n  sendingRate?: number | undefined;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
