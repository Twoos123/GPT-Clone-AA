{
  "version": 3,
  "sources": ["../src/routes.ts"],
  "sourcesContent": ["import { Client } from \"@gadget-client/aa-gpt-clone\";\nimport type { FastifyInstance, FastifyReply, FastifyRequest, RequestGenericInterface } from \"fastify\";\nimport { Logger } from \"./AmbientContext\";\nimport { AppConfiguration } from \"./AppConfiguration\";\nimport { AppConnections } from \"./AppConnections\";\nimport { Session } from \"./Session\";\nimport { GadgetConfig } from \"./types\"\n\n/**\n * Extend the fastify request type with our added decorations like `.api`, `.emails`, etc\n * See https://fastify.dev/docs/latest/Reference/TypeScript#creating-type-definitions-for-a-fastify-plugin\n **/\ndeclare module \"fastify\" {\n  interface FastifyRequest {\n    /** The current request's session, if it has one. Requests made by browsers are given sessions, but requests made using Gadget API Keys are not. */\n    session: Session | null;\n\n    /** The current request's session ID, if it has one. Requests made by browsers are given sessions, but requests made using Gadget API Keys are not. */\n    sessionID: string | null;\n\n    /** All aa-gpt-clone configuration values */\n    config: AppConfiguration;\n\n    /** A map of connection name to instantiated connection objects for aa-gpt-clone */\n    connections: AppConnections;\n\n    /** A high performance structured logger which writes logs to the Logs Viewer in the Gadget Editor. */\n    logger: Logger;\n\n    /** Gadget configuration values for the current request. Useful for Remix SSR apps for accessing the Shopify install state or passing the values to client side code. */\n    gadgetConfig: GadgetConfig;\n\n    /** An context object used by Gadget to store request information that it is responsible for managing. */\n    gadgetContext: Record<string, any>;\n\n    /**\n     * An instance of the API client for aa-gpt-clone.\n     *\n     * __Note__: This client is authorized using a superuser internal api token and has permission to invoke any action in the system using normal API mutations or the Internal API.\n     **/\n    api: Client;\n\n    /** App URL for the current environment e.g. https://example.gadget.app */\n    currentAppUrl: string;\n\n    /** Fastify request object */\n    request: this;\n\n    /** Fastify reply object */\n    reply: FastifyReply;\n\n    /** @deprecated Use session instead */\n    applicationSession?: Session;\n\n    /** @deprecated Use sessionID instead */\n    applicationSessionID?: string;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-object-type\n  interface FastifyReply {\n    // no reply extensions yet\n  }\n}\n\n/** A server instance, for hooking into various events, decorating requests, and so on.  */\nexport type Server = FastifyInstance;\n\n/** A request instance, to query data on an incoming HTTP request. */\nexport type RouteContext<InputTypes extends RequestGenericInterface = RequestGenericInterface> = FastifyRequest<InputTypes>\n\nexport type Request<InputTypes extends RequestGenericInterface = RequestGenericInterface> = FastifyRequest<InputTypes>;\n\n/** A reply instance, for sending headers and data in an HTTP response. */\nexport type Reply = FastifyReply;\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
