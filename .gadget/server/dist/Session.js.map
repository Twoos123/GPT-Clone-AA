{
  "version": 3,
  "sources": ["../src/Session.ts"],
  "sourcesContent": ["/**\n * Bag of key-values associated with the current actor running this request or action\n **/\nexport class Session {\n  static fromInput(input?: Record<string, any>): Session | undefined {\n    if (input) {\n      return new Session(input.id, input);\n    }\n  }\n\n  changedKeys: Set<string> = new Set<string>();\n  ended = false;\n  touched = false;\n  #storage: Record<string, any>;\n\n  constructor(private _id: string | null, obj: Record<string, any>) {\n    this.#storage = obj;\n  }\n\n  get(key: string): any {\n    return this.#storage[key];\n  }\n\n  set(key: string, value: any): void {\n    this.changedKeys.add(key);\n    this.#storage[key] = value;\n  }\n\n  touch(): void {\n    this.touched = true;\n  }\n\n  delete(key: string): void {\n    this.changedKeys.add(key);\n    this.#storage[key] = null;\n  }\n\n  end(): void {\n    this.changedKeys.add(\"id\");\n    this.ended = true;\n  }\n\n  clearChanges(): void {\n    this.changedKeys.clear();\n  }\n\n  get changed(): boolean {\n    return this.changedKeys.size > 0;\n  }\n\n  toJSON(): Record<string, any> {\n    return this.#storage;\n  }\n\n  toChangedJSON(): Record<string, any> {\n    const changes: Record<string, any> = {};\n    for (const key of this.changedKeys) {\n      changes[key] = this.#storage[key];\n    }\n    return changes;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  set id(value: string | null) {\n    this._id = value;\n    this.set(\"id\", this._id);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGO,MAAM,WAAN,MAAc;AAAA,EAYnB,YAAoB,KAAoB,KAA0B;AAA9C;AALpB,uBAA2B,oBAAI,IAAY;AAC3C,iBAAQ;AACR,mBAAU;AACV;AAGE,uBAAK,UAAW;AAAA,EAClB;AAAA,EAbA,OAAO,UAAU,OAAkD;AACjE,QAAI,OAAO;AACT,aAAO,IAAI,SAAQ,MAAM,IAAI,KAAK;AAAA,IACpC;AAAA,EACF;AAAA,EAWA,IAAI,KAAkB;AACpB,WAAO,mBAAK,UAAS,GAAG;AAAA,EAC1B;AAAA,EAEA,IAAI,KAAa,OAAkB;AACjC,SAAK,YAAY,IAAI,GAAG;AACxB,uBAAK,UAAS,GAAG,IAAI;AAAA,EACvB;AAAA,EAEA,QAAc;AACZ,SAAK,UAAU;AAAA,EACjB;AAAA,EAEA,OAAO,KAAmB;AACxB,SAAK,YAAY,IAAI,GAAG;AACxB,uBAAK,UAAS,GAAG,IAAI;AAAA,EACvB;AAAA,EAEA,MAAY;AACV,SAAK,YAAY,IAAI,IAAI;AACzB,SAAK,QAAQ;AAAA,EACf;AAAA,EAEA,eAAqB;AACnB,SAAK,YAAY,MAAM;AAAA,EACzB;AAAA,EAEA,IAAI,UAAmB;AACrB,WAAO,KAAK,YAAY,OAAO;AAAA,EACjC;AAAA,EAEA,SAA8B;AAC5B,WAAO,mBAAK;AAAA,EACd;AAAA,EAEA,gBAAqC;AACnC,UAAM,UAA+B,CAAC;AACtC,eAAW,OAAO,KAAK,aAAa;AAClC,cAAQ,GAAG,IAAI,mBAAK,UAAS,GAAG;AAAA,IAClC;AACA,WAAO;AAAA,EACT;AAAA,EAEA,IAAI,KAAK;AACP,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,IAAI,GAAG,OAAsB;AAC3B,SAAK,MAAM;AACX,SAAK,IAAI,MAAM,KAAK,GAAG;AAAA,EACzB;AACF;AAnEO,IAAM,UAAN;AAUL;",
  "names": []
}
